Description: Fallback network config instead of network_data.json for OpenStack
 To make this acceptable as a SRU we keep the same behavior as is
 in the stable release which is to generate network for fallback nic
 only.
 .
 In this series, OpenStack datasource can optionally generate
 network_config from network_data.json if the datasource is configured
 with a file like /etc/cloud.cfg.d/openstack-net.cfg:
 .
 datasource:
   OpenStack:
     apply_network_config: true
Forwarded: not-needed
Author: Chad Smith <chad.smith@canonical.com>

Index: cloud-init/cloudinit/sources/DataSourceOpenStack.py
===================================================================
--- cloud-init.orig/cloudinit/sources/DataSourceOpenStack.py	2022-01-20 12:34:23.522713641 -0700
+++ cloud-init/cloudinit/sources/DataSourceOpenStack.py	2022-01-20 12:40:13.796706171 -0700
@@ -117,10 +117,11 @@
         if self._network_config != sources.UNSET:
             return self._network_config
 
-        # RELEASE_BLOCKER: SRU to Xenial and Artful SRU should not provide
+        # Xenial, Artful and Bionic will not provide
         # network_config by default unless configured in /etc/cloud/cloud.cfg*.
         # Patch Xenial and Artful before release to default to False.
-        if util.is_false(self.ds_cfg.get("apply_network_config", True)):
+        if util.is_false(self.ds_cfg.get("apply_network_config", False)):
+
             self._network_config = None
             return self._network_config
         if self.network_json == sources.UNSET:
Index: cloud-init/tests/unittests/sources/test_openstack.py
===================================================================
--- cloud-init.orig/tests/unittests/sources/test_openstack.py	2022-01-20 12:34:23.522713641 -0700
+++ cloud-init/tests/unittests/sources/test_openstack.py	2022-01-20 13:07:15.153509050 -0700
@@ -371,7 +371,7 @@
         ds_os = ds.DataSourceOpenStack(
             settings.CFG_BUILTIN, None, helpers.Paths({"run_dir": self.tmp})
         )
-        ds_os.ds_cfg = {"apply_network_config": False}
+        ds_os.ds_cfg = {"apply_network_config": True}  # Default is False
         sample_json = {
             "links": [{"ethernet_mac_address": "mymac"}],
             "networks": [],
